{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\i5-10400f\\\\Desktop\\\\social-react\\\\src\\\\components\\\\CreatePost\\\\CreatePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { UserContext } from \"../Context/userContext\";\nimport { db, storage } from \"../firebase/firebase\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { doc, setDoc } from \"firebase/firestore\";\nimport \"./CreatePost.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreatePost = () => {\n  _s();\n\n  const [user, setUser] = useContext(UserContext).user;\n  const [post, setPost] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [myprogress, setMyprogress] = useState(null);\n\n  const generateId = length => {\n    let allCarc = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\";\n    let myId = '';\n\n    for (var i = 0; i < length; i++) {\n      myId += allCarc[Math.floor(Math.random() * allCarc.length)];\n    }\n\n    return myId;\n  };\n\n  const handleUpload = () => {\n    if (image) {\n      const imageName = generateId(10);\n      const imagesRef = ref(storage, `images/${imageName}.jpg`);\n      const metadata = {\n        contentType: 'image/jpeg'\n      };\n      const uploadTask = uploadBytesResumable(imagesRef, image, metadata);\n      uploadTask.on('state_complete', snapshot => {\n        const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n        setMyprogress(progress);\n        console.log('Upload is ' + progress + '% done');\n\n        if (progress == 100) {\n          setPost(\"\");\n          setMyprogress(0);\n          var myImageTag = document.getElementById('Image-Preview');\n          myImageTag.style.display = 'none';\n        }\n      }, error => {\n        console.log(error);\n      }, () => {\n        getDownloadURL(imagesRef).then(async imageURL => {\n          try {\n            await setDoc(doc(db, \"posts\", imageName), {\n              post: post,\n              profileUrl: user.photoURL,\n              username: user.displayName,\n              photoUrl: imageURL\n            });\n          } catch (e) {\n            console.error(\"Error adding document: \", e);\n          }\n        });\n      });\n    }\n  };\n\n  const handleImage = e => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n      var urlObject = URL.createObjectURL(e.target.files[0]);\n      var myImageTag = document.getElementById('Image-Preview');\n      myImageTag.src = urlObject;\n      myImageTag.style.display = 'block';\n      myImageTag.style.width = '100px';\n      myImageTag.style.height = '100px';\n      myImageTag.style.padding = '10px';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-post\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.photoURL,\n        alt: \"\",\n        className: \"create-post-user-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Whats On Your Mind?\",\n      value: post,\n      onChange: e => setPost(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"img\",\n        id: \"Image-Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        required: true,\n        htmlFor: \"addImage\",\n        style: {\n          cursor: \"pointer\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 75\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"addImage\",\n        accept: \"image/*\",\n        style: {\n          display: \"none\"\n        },\n        onChange: handleImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        style: {\n          color: post || image || myprogress > 1 ? 'black' : '#999'\n        },\n        children: `Post ${myprogress > 1 ? myprogress + '%' : \"\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreatePost, \"c9PY3CuAbY5fe3/PUbaXb4GTmak=\");\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["C:/Users/i5-10400f/Desktop/social-react/src/components/CreatePost/CreatePost.js"],"names":["React","useContext","useState","UserContext","db","storage","ref","uploadBytesResumable","getDownloadURL","doc","setDoc","CreatePost","user","setUser","post","setPost","image","setImage","myprogress","setMyprogress","generateId","length","allCarc","myId","i","Math","floor","random","handleUpload","imageName","imagesRef","metadata","contentType","uploadTask","on","snapshot","progress","round","bytesTransferred","totalBytes","console","log","myImageTag","document","getElementById","style","display","error","then","imageURL","profileUrl","photoURL","username","displayName","photoUrl","e","handleImage","target","files","urlObject","URL","createObjectURL","src","width","height","padding","value","cursor","color"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { UserContext } from \"../Context/userContext\";\r\nimport { db, storage } from \"../firebase/firebase\";\r\nimport {ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\r\nimport { doc, setDoc } from \"firebase/firestore\"; \r\n\r\n\r\nimport \"./CreatePost.css\"\r\nconst CreatePost = () => {\r\n\r\n\r\n  const [user, setUser] = useContext(UserContext).user;\r\n  const [post, setPost] = useState(\"\");\r\n  const [image, setImage] = useState(null);\r\n  const [myprogress, setMyprogress] = useState(null);\r\n\r\n\r\n  const generateId = (length) => {\r\n    let allCarc = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\";\r\n    let myId = '';\r\n    for (var i = 0; i < length ; i++){\r\n        myId += allCarc[Math.floor(Math.random() * allCarc.length)] \r\n    }\r\n    return myId\r\n  }\r\n\r\n\r\n  const handleUpload = () => {\r\n    if(image){\r\n      const imageName = generateId(10);\r\n      const imagesRef = ref(storage, `images/${imageName}.jpg`);\r\n      const metadata = {\r\n        contentType: 'image/jpeg',\r\n      };\r\n      const uploadTask = uploadBytesResumable(imagesRef,image,metadata);\r\n\r\n      \r\n\r\n    uploadTask.on('state_complete',(snapshot) => {\r\n      const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\r\n      setMyprogress(progress)\r\n      console.log('Upload is ' + progress + '% done');\r\n      if(progress == 100) {\r\n        setPost(\"\")\r\n        setMyprogress(0)\r\n        var myImageTag = document.getElementById('Image-Preview')\r\n        myImageTag.style.display = 'none'\r\n      }\r\n    },(error) => {\r\n      console.log(error)\r\n    },() => {\r\n      getDownloadURL(imagesRef).then(async imageURL => {\r\n        try {\r\n          await setDoc(doc(db, \"posts\", imageName), {\r\n            post: post,\r\n            profileUrl: user.photoURL,\r\n            username: user.displayName,\r\n            photoUrl: imageURL,\r\n          });\r\n        } catch (e) {\r\n          console.error(\"Error adding document: \", e);\r\n        }\r\n      })\r\n    })\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  const handleImage = (e) => {\r\n    if(e.target.files[0]){\r\n\r\n      setImage(e.target.files[0])\r\n\r\n      var urlObject = URL.createObjectURL(e.target.files[0])\r\n\r\n      var myImageTag = document.getElementById('Image-Preview')\r\n      myImageTag.src = urlObject\r\n      myImageTag.style.display = 'block'\r\n      myImageTag.style.width = '100px'\r\n      myImageTag.style.height = '100px'\r\n      myImageTag.style.padding = '10px'\r\n    }\r\n  }\r\n\r\n\r\n    return (\r\n        <div className=\"create-post\">\r\n          <p><img src={user.photoURL} alt=\"\" className='create-post-user-image' /></p>\r\n            <textarea\r\n            placeholder='Whats On Your Mind?'\r\n            value={post}\r\n            onChange={e => setPost(e.target.value)}>\r\n            </textarea>\r\n            <div className=\"image\">\r\n              <img alt=\"img\" id='Image-Preview' />\r\n            </div>\r\n            <div className=\"actions\">\r\n            <label required htmlFor=\"addImage\" style={{cursor:\"pointer\"}}><i className=\"fas fa-camera\"></i></label>\r\n            <input type=\"file\" id='addImage' accept='image/*' style={{display: \"none\"}} onChange={handleImage}/>\r\n            <button onClick={handleUpload} style={{color: post || image || myprogress > 1  ? 'black' : '#999'}}>{`Post ${ myprogress > 1 ? myprogress + '%' : \"\"}`}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost;\r\n"]},"metadata":{},"sourceType":"module"}