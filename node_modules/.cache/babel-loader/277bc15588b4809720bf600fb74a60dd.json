{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\i5-10400f\\\\Desktop\\\\react-test\\\\src\\\\components\\\\AllPosts\\\\AllPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { UserContext } from '../Context/userContext';\nimport { db } from '../firebase/firebase';\nimport { doc, getDoc, query, getDocs, collection, deleteDoc, setDoc, updateDoc } from \"firebase/firestore\";\nimport './AllPosts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AllPosts = () => {\n  _s();\n\n  // Variabels\n  const [user, setUser] = useContext(UserContext).user;\n  const [docs, setDocs] = useState([]);\n  const [comment, setComment] = useState(null);\n  const [commentArray, setCommentArray] = useState(comment ? comment : []);\n  const [isLiked, setIsLiked] = useState(false);\n  const q = query(collection(db, \"posts\")); // Functions\n\n  const handleLike = async id => {\n    setIsLiked(!isLiked);\n    await updateDoc(doc(db, \"posts\", id), {});\n  };\n\n  const handleDeletePost = async id => {\n    await deleteDoc(doc(db, \"posts\", id));\n  };\n\n  const handleAddComment = async id => {\n    commentArray.push({\n      comment: comment,\n      username: user.displayName\n    });\n    await updateDoc(doc(db, \"posts\", id), {\n      comments: commentArray\n    });\n    setComment('');\n  };\n\n  useEffect(async () => {\n    const querySnapshot = await getDocs(q);\n    setDocs(querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      post: doc.data()\n    })));\n  }, [q]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: docs.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: docs.map(({\n        id,\n        post\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.profileUrl,\n            alt: \"profileUrl\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"username\",\n            children: post.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-post\",\n            onClick: () => handleDeletePost(id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.photoUrl,\n            alt: post.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-reactions\",\n          style: {\n            textAlign: \"start\",\n            fontSize: \"25px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: () => handleLike(id),\n            className: isLiked ? \"fas fa-heart\" : \"far fa-heart\",\n            style: {\n              color: \"red\",\n              cursor: \"pointer\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: user.likes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-caption\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: post.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.post\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), post.comments && post.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-comments\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"username-comment\",\n            children: comment.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"comment\",\n            children: comment.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)), user && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-comment\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: \"1\",\n            placeholder: \"Add a comment\",\n            value: comment ? comment : \"\",\n            onChange: e => setComment(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-comment-btn\",\n            onClick: () => handleAddComment(id),\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 22\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No posts yet , Start adding some \\uD83D\\uDCDD ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 37\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n};\n\n_s(AllPosts, \"asPXSmvdfk8aghTuZ5s+K7H9D2A=\");\n\n_c = AllPosts;\nexport default AllPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllPosts\");","map":{"version":3,"sources":["C:/Users/i5-10400f/Desktop/react-test/src/components/AllPosts/AllPosts.js"],"names":["React","useContext","useEffect","useState","UserContext","db","doc","getDoc","query","getDocs","collection","deleteDoc","setDoc","updateDoc","AllPosts","user","setUser","docs","setDocs","comment","setComment","commentArray","setCommentArray","isLiked","setIsLiked","q","handleLike","id","handleDeletePost","handleAddComment","push","username","displayName","comments","querySnapshot","map","post","data","length","profileUrl","photoUrl","textAlign","fontSize","color","cursor","likes","e","target","value"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react'\r\nimport {UserContext} from '../Context/userContext'\r\nimport {db} from '../firebase/firebase'\r\nimport { doc, getDoc, query, getDocs, collection, deleteDoc, setDoc, updateDoc  } from \"firebase/firestore\";\r\nimport './AllPosts.css'\r\n\r\n\r\nconst AllPosts = () => {\r\n  // Variabels\r\n\r\n    const [user, setUser] = useContext(UserContext).user;\r\n    const [docs, setDocs] = useState([]);\r\n    const [comment, setComment] = useState(null)\r\n    const [commentArray, setCommentArray] = useState(comment ? comment : [])\r\n    const [isLiked, setIsLiked] = useState(false)\r\n    const q = query(collection(db, \"posts\"));\r\n\r\n\r\n    // Functions\r\n    const handleLike = async (id) => {\r\n      setIsLiked(!isLiked)\r\n      await updateDoc(doc(db, \"posts\", id), {\r\n        \r\n      });\r\n    }\r\n\r\n    const handleDeletePost = async (id) => {\r\n      await deleteDoc(doc(db, \"posts\", id));\r\n    }\r\n   \r\n    const handleAddComment = async (id) => {\r\n      commentArray.push({\r\n        comment: comment,\r\n        username: user.displayName\r\n      })\r\n\r\n      await updateDoc(doc(db, \"posts\", id), {\r\n        comments: commentArray\r\n      });\r\n      setComment('')\r\n    }\r\n\r\n    useEffect(async () => {\r\n      const querySnapshot = await getDocs(q);\r\n      setDocs(querySnapshot.docs.map(doc => ({id: doc.id, post: doc.data()})))\r\n    }, [q])\r\n    \r\n    return (  \r\n\r\n      <div className=\"posts\">\r\n        {docs.length > 0 ? (\r\n          <>\r\n          { docs.map( ({id, post}) => (\r\n          <div className=\"post\" key={id}>\r\n            <div className=\"post-header\">\r\n              <img src={post.profileUrl} alt=\"profileUrl\" />\r\n              <h3 className='username'>{post.username}</h3>\r\n              <button className='delete-post' onClick={() => handleDeletePost(id)}>Delete</button>\r\n            </div>\r\n            <div className=\"post-image\">\r\n              <img src={post.photoUrl} alt={post.username} />\r\n            </div>\r\n            <div className=\"post-reactions\" style={{textAlign: \"start\", fontSize:\"25px\"}}>\r\n              <i onClick= {() => handleLike(id)} className={isLiked ? \"fas fa-heart\" : \"far fa-heart\"} style={{color: \"red\", cursor:\"pointer\"}}></i>\r\n              <span>{user.likes}</span>\r\n            </div>\r\n            <div className=\"post-caption\">\r\n              <span>{post.username}</span>\r\n              <p>{post.post}</p>\r\n            </div>\r\n            {post.comments && post.comments.map(comment => (\r\n              <div className=\"post-comments\">\r\n                <p className=\"username-comment\">{comment.username}</p>\r\n                <p className=\"comment\">{comment.comment}</p>\r\n              </div>\r\n            ))}\r\n            {user && <div className=\"add-comment\">\r\n              <textarea rows='1' placeholder='Add a comment' value={comment ? comment : \"\"} onChange={e => setComment(e.target.value)}></textarea>\r\n              <button className='add-comment-btn' onClick={() => handleAddComment(id)}>Add</button>\r\n            </div>}\r\n          </div>\r\n        ) ) }\r\n          </>\r\n        ) : <div className=\"posts\"> <p>No posts yet , Start adding some 📝 ...</p> </div> }\r\n      </div>\r\n    )}\r\n\r\nexport default AllPosts\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}