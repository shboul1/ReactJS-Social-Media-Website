{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\i5-10400f\\\\Desktop\\\\social-react\\\\src\\\\components\\\\AllPosts\\\\AllPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { UserContext } from '../Context/userContext';\nimport { db } from '../firebase/firebase';\nimport { doc, query, getDocs, collection, deleteDoc, updateDoc } from \"firebase/firestore\";\nimport SkeletonWrapper from '../Skeleton/SkeletonWrapper';\nimport Comment from '../AddComment/Comment';\nimport './AllPosts.css';\nimport Post from '../Post/Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AllPosts = () => {\n  _s();\n\n  // Variabels\n  const [user, setUser] = useContext(UserContext).user;\n  const [docs, setDocs] = useState([]);\n  const [comment, setComment] = useState(null);\n  const [commentsArray, setCommentsArray] = useState([]);\n  const q = query(collection(db, \"posts\")); // Functions\n\n  const handleDeletePost = async id => {\n    await deleteDoc(doc(db, \"posts\", id));\n  };\n\n  const handleAddComment = async id => {\n    commentsArray.push({\n      username: user.displayName,\n      comment: comment\n    });\n    const commentsRef = doc(db, \"posts\", id);\n    await updateDoc(commentsRef, {\n      comments: commentsArray\n    }, {\n      merge: true\n    });\n    setComment('');\n  };\n\n  useEffect(async () => {\n    const querySnapshot = await getDocs(q);\n    setDocs(querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      post: doc.data()\n    })));\n  }, [q]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: docs.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SkeletonWrapper, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Post, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No posts yet , Start adding some \\uD83D\\uDCDD ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 37\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n};\n\n_s(AllPosts, \"vUrYpUdFis/3s5kdu+SHpIoSMVY=\");\n\n_c = AllPosts;\nexport default AllPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllPosts\");","map":{"version":3,"sources":["C:/Users/i5-10400f/Desktop/social-react/src/components/AllPosts/AllPosts.js"],"names":["React","useContext","useEffect","useState","UserContext","db","doc","query","getDocs","collection","deleteDoc","updateDoc","SkeletonWrapper","Comment","Post","AllPosts","user","setUser","docs","setDocs","comment","setComment","commentsArray","setCommentsArray","q","handleDeletePost","id","handleAddComment","push","username","displayName","commentsRef","comments","merge","querySnapshot","map","post","data","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SAAQC,EAAR,QAAiB,sBAAjB;AACA,SAASC,GAAT,EAAcC,KAAd,EAAqBC,OAArB,EAA8BC,UAA9B,EAA0CC,SAA1C,EAAqDC,SAArD,QAAuE,oBAAvE;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,cAAjB;;;;AAIA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB;AAEE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhB,UAAU,CAACG,WAAD,CAAV,CAAwBY,IAAhD;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACmB,aAAD,EAAgBC,gBAAhB,IAAoCpB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAMqB,CAAC,GAAGjB,KAAK,CAACE,UAAU,CAACJ,EAAD,EAAK,OAAL,CAAX,CAAf,CAPmB,CAUnB;;AAEA,QAAMoB,gBAAgB,GAAG,MAAOC,EAAP,IAAc;AACrC,UAAMhB,SAAS,CAACJ,GAAG,CAACD,EAAD,EAAK,OAAL,EAAcqB,EAAd,CAAJ,CAAf;AACD,GAFD;;AAGA,QAAMC,gBAAgB,GAAG,MAAOD,EAAP,IAAc;AACrCJ,IAAAA,aAAa,CAACM,IAAd,CAAmB;AACjBC,MAAAA,QAAQ,EAAEb,IAAI,CAACc,WADE;AAEjBV,MAAAA,OAAO,EAAEA;AAFQ,KAAnB;AAIA,UAAMW,WAAW,GAAGzB,GAAG,CAACD,EAAD,EAAK,OAAL,EAAcqB,EAAd,CAAvB;AACA,UAAMf,SAAS,CAACoB,WAAD,EAAc;AAC3BC,MAAAA,QAAQ,EAAEV;AADiB,KAAd,EAEb;AAAEW,MAAAA,KAAK,EAAE;AAAT,KAFa,CAAf;AAGAZ,IAAAA,UAAU,CAAC,EAAD,CAAV;AAED,GAXD;;AAaAnB,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMgC,aAAa,GAAG,MAAM1B,OAAO,CAACgB,CAAD,CAAnC;AACAL,IAAAA,OAAO,CAACe,aAAa,CAAChB,IAAd,CAAmBiB,GAAnB,CAAuB7B,GAAG,KAAM;AAACoB,MAAAA,EAAE,EAAEpB,GAAG,CAACoB,EAAT;AAAaU,MAAAA,IAAI,EAAE9B,GAAG,CAAC+B,IAAJ;AAAnB,KAAN,CAA1B,CAAD,CAAP;AACD,GAHQ,EAGN,CAACb,CAAD,CAHM,CAAT;AAIA,sBAEE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACGN,IAAI,CAACoB,MAAL,GAAc,CAAd,gBACC;AAAA,8BACA,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA,oBADD,gBAKG;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,mCAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA,UAFF;AAWE,CA3CN;;GAAMvB,Q;;KAAAA,Q;AA6CN,eAAeA,QAAf","sourcesContent":["import React, {useContext, useEffect, useState} from 'react'\r\nimport {UserContext} from '../Context/userContext'\r\nimport {db} from '../firebase/firebase'\r\nimport { doc, query, getDocs, collection, deleteDoc, updateDoc  } from \"firebase/firestore\";\r\nimport SkeletonWrapper from '../Skeleton/SkeletonWrapper'\r\nimport Comment from '../AddComment/Comment'\r\nimport './AllPosts.css'\r\nimport Post from '../Post/Post';\r\n\r\n\r\n\r\nconst AllPosts = () => {\r\n  // Variabels\r\n\r\n    const [user, setUser] = useContext(UserContext).user;\r\n    const [docs, setDocs] = useState([]);\r\n    const [comment, setComment] = useState(null)\r\n    const [commentsArray, setCommentsArray] = useState([]);\r\n    const q = query(collection(db, \"posts\"));\r\n\r\n\r\n    // Functions\r\n\r\n    const handleDeletePost = async (id) => {\r\n      await deleteDoc(doc(db, \"posts\", id));\r\n    }\r\n    const handleAddComment = async (id) => {\r\n      commentsArray.push({\r\n        username: user.displayName,\r\n        comment: comment,\r\n      })\r\n      const commentsRef = doc(db, \"posts\", id);\r\n      await updateDoc(commentsRef, {\r\n        comments: commentsArray\r\n      },{ merge: true });\r\n      setComment('')\r\n\r\n    }\r\n\r\n    useEffect(async () => {\r\n      const querySnapshot = await getDocs(q);\r\n      setDocs(querySnapshot.docs.map(doc => ( {id: doc.id, post: doc.data() } )));\r\n    }, [q])\r\n    return (\r\n      \r\n      <div className=\"posts\">\r\n        {docs.length > 0 ? (\r\n          <>\r\n          <SkeletonWrapper />\r\n          <Post />\r\n          </>\r\n        ) : <div className=\"posts\"> <p>No posts yet , Start adding some 📝 ...</p> </div> }\r\n      </div>\r\n      \r\n    )}\r\n\r\nexport default AllPosts\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}