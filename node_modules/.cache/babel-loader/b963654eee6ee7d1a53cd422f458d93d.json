{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\i5-10400f\\\\Desktop\\\\react-test\\\\src\\\\components\\\\AllPosts\\\\AllPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { UserContext } from '../Context/userContext';\nimport { db } from '../firebase/firebase';\nimport { doc, getDoc, query, getDocs, collection, deleteDoc, setDoc, updateDoc } from \"firebase/firestore\";\nimport Comment from '../AddComment/Comment';\nimport './AllPosts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AllPosts = () => {\n  _s();\n\n  // Variabels\n  const [user, setUser] = useContext(UserContext).user;\n  const [docs, setDocs] = useState([]);\n  const [comment, setComment] = useState(null);\n  const [commentsArray, setCommentsArray] = useState([]);\n  const q = query(collection(db, \"posts\")); // Functions\n\n  const handleDeletePost = async id => {\n    await deleteDoc(doc(db, \"posts\", id));\n  };\n\n  const handleAddComment = async id => {\n    commentsArray.push({\n      username: user.displayName,\n      comment: comment\n    });\n    const commentsRef = doc(db, \"posts\", \"comments\");\n    await updateDoc(commentsRef, {\n      commentsArray\n    });\n    setComment('');\n  };\n\n  useEffect(async () => {\n    const querySnapshot = await getDocs(q);\n    setDocs(querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      post: doc.data()\n    })));\n  }, [q]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: docs.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: docs.map(({\n        id,\n        post\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.profileUrl,\n            alt: \"profileUrl\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"username\",\n            children: post.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-post\",\n            onClick: () => handleDeletePost(id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.photoUrl,\n            alt: post.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-caption\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: post.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.post\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), docs.comments && docs.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-comments\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"username-comment\",\n            children: comment.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"comment\",\n            children: comment.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)), user && /*#__PURE__*/_jsxDEV(Comment, {\n          comment: comment,\n          setComment: setComment,\n          handleAddComment: handleAddComment,\n          id: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 22\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No posts yet , Start adding some \\uD83D\\uDCDD ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 37\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n};\n\n_s(AllPosts, \"vUrYpUdFis/3s5kdu+SHpIoSMVY=\");\n\n_c = AllPosts;\nexport default AllPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllPosts\");","map":{"version":3,"sources":["C:/Users/i5-10400f/Desktop/react-test/src/components/AllPosts/AllPosts.js"],"names":["React","useContext","useEffect","useState","UserContext","db","doc","getDoc","query","getDocs","collection","deleteDoc","setDoc","updateDoc","Comment","AllPosts","user","setUser","docs","setDocs","comment","setComment","commentsArray","setCommentsArray","q","handleDeletePost","id","handleAddComment","push","username","displayName","commentsRef","querySnapshot","map","post","data","length","profileUrl","photoUrl","comments"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react'\r\nimport {UserContext} from '../Context/userContext'\r\nimport {db} from '../firebase/firebase'\r\nimport { doc, getDoc, query, getDocs, collection, deleteDoc, setDoc, updateDoc  } from \"firebase/firestore\";\r\nimport Comment from '../AddComment/Comment'\r\nimport './AllPosts.css'\r\n\r\n\r\n\r\nconst AllPosts = () => {\r\n  // Variabels\r\n\r\n    const [user, setUser] = useContext(UserContext).user;\r\n    const [docs, setDocs] = useState([]);\r\n    const [comment, setComment] = useState(null)\r\n    const [commentsArray, setCommentsArray] = useState([]);\r\n    const q = query(collection(db, \"posts\"));\r\n\r\n\r\n    // Functions\r\n\r\n    const handleDeletePost = async (id) => {\r\n      await deleteDoc(doc(db, \"posts\", id));\r\n    }\r\n    const handleAddComment = async (id) => {\r\n      commentsArray.push({\r\n        username: user.displayName,\r\n        comment: comment,\r\n      })\r\n      const commentsRef = doc(db, \"posts\", \"comments\");\r\n      await updateDoc(commentsRef, {commentsArray});\r\n      setComment('')\r\n    }\r\n\r\n    useEffect(async () => {\r\n      const querySnapshot = await getDocs(q);\r\n      setDocs(querySnapshot.docs.map(doc => ( {id: doc.id, post: doc.data() } )));\r\n    }, [q])\r\n    return (  \r\n\r\n      <div className=\"posts\">\r\n        {docs.length > 0 ? (\r\n          <>\r\n          { docs.map( ({id, post}) => (\r\n          <div className=\"post\" key={id}>\r\n            <div className=\"post-header\">\r\n              <img src={post.profileUrl} alt=\"profileUrl\" />\r\n              <h3 className='username'>{post.username}</h3>\r\n              <button className='delete-post' onClick={() => handleDeletePost(id)}>Delete</button>\r\n            </div>\r\n            <div className=\"post-image\">\r\n              <img src={post.photoUrl} alt={post.username} />\r\n            </div>\r\n          \r\n            <div className=\"post-caption\">\r\n              <span>{post.username}</span>\r\n              <p>{post.post}</p>\r\n            </div>\r\n            { docs.comments && docs.comments.map(comment => (\r\n              <div className=\"post-comments\">\r\n                <p className=\"username-comment\">{comment.username}</p>\r\n                <p className=\"comment\">{comment.comment}</p>\r\n              </div>\r\n            ))}\r\n            {user && <Comment comment={comment} setComment={setComment} handleAddComment={handleAddComment} id={id} />}\r\n          </div>\r\n        ) ) }\r\n          </>\r\n        ) : <div className=\"posts\"> <p>No posts yet , Start adding some 📝 ...</p> </div> }\r\n      </div>\r\n    )}\r\n\r\nexport default AllPosts\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}