{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\i5-10400f\\\\Desktop\\\\social-react\\\\src\\\\components\\\\Post\\\\Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { UserContext } from '../Context/userContext';\nimport { query, getDocs, collection } from \"firebase/firestore\";\nimport { db } from '../firebase/firebase';\nimport \"./Post.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = () => {\n  _s();\n\n  const [user, setUser] = useContext(UserContext).user;\n  const [docs, setDocs] = useState([]);\n  const [comment, setComment] = useState(null);\n  const [commentsArray, setCommentsArray] = useState([]);\n  const q = query(collection(db, \"posts\"));\n\n  const handleDeletePost = async id => {\n    await deleteDoc(doc(db, \"posts\", id));\n  };\n\n  const handleAddComment = async id => {\n    commentsArray.push({\n      username: user.displayName,\n      comment: comment\n    });\n    const commentsRef = doc(db, \"posts\", id);\n    await updateDoc(commentsRef, {\n      comments: commentsArray\n    }, {\n      merge: true\n    });\n    setComment('');\n  };\n\n  useEffect(async () => {\n    const querySnapshot = await getDocs(q);\n    setDocs(querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      post: doc.data()\n    })));\n  }, [q]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: docs.map(({\n      id,\n      post\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: post.profileUrl,\n          alt: \"profileUrl\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"username\",\n          children: post.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), user && user.displayName === post.username && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-post\",\n          onClick: () => handleDeletePost(id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 65\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: post.photoUrl,\n          alt: post.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-caption\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: post.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), post.comments && post.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-comments\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"username-comment\",\n          children: comment.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"comment\",\n          children: comment.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)), user && /*#__PURE__*/_jsxDEV(Comment, {\n        comment: comment,\n        setComment: setComment,\n        handleAddComment: handleAddComment,\n        id: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 22\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Post, \"vUrYpUdFis/3s5kdu+SHpIoSMVY=\");\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/i5-10400f/Desktop/social-react/src/components/Post/Post.js"],"names":["React","useState","useEffect","useContext","UserContext","query","getDocs","collection","db","Post","user","setUser","docs","setDocs","comment","setComment","commentsArray","setCommentsArray","q","handleDeletePost","id","deleteDoc","doc","handleAddComment","push","username","displayName","commentsRef","updateDoc","comments","merge","querySnapshot","map","post","data","profileUrl","photoUrl"],"mappings":"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","sourcesContent":["import React,{useState, useEffect, useContext} from 'react'\r\nimport { UserContext } from '../Context/userContext';\r\nimport {query, getDocs, collection  } from \"firebase/firestore\";\r\nimport {db} from '../firebase/firebase'\r\n\r\nimport \"./Post.css\"\r\n\r\nconst Post = () => {\r\n    const [user, setUser] = useContext(UserContext).user;\r\n    const [docs, setDocs] = useState([]);\r\n    const [comment, setComment] = useState(null)\r\n    const [commentsArray, setCommentsArray] = useState([]);\r\n    const q = query(collection(db, \"posts\"));\r\n\r\n    const handleDeletePost = async (id) => {\r\n        await deleteDoc(doc(db, \"posts\", id));\r\n      }\r\n      \r\n      const handleAddComment = async (id) => {\r\n        commentsArray.push({\r\n          username: user.displayName,\r\n          comment: comment,\r\n        })\r\n        const commentsRef = doc(db, \"posts\", id);\r\n        await updateDoc(commentsRef, {\r\n          comments: commentsArray\r\n        },{ merge: true });\r\n        setComment('')\r\n  \r\n      }\r\n\r\n    useEffect(async () => {\r\n        const querySnapshot = await getDocs(q);\r\n        setDocs(querySnapshot.docs.map(doc => ( {id: doc.id, post: doc.data() } )));\r\n      }, [q])\r\n    return (\r\n        <div>\r\n            { docs.map( ({id, post}) => (\r\n            <div className=\"post\" key={id}>\r\n            <div className=\"post-header\">\r\n                <img src={post.profileUrl} alt=\"profileUrl\" />\r\n                <h3 className='username'>{post.username}</h3>\r\n                { user && user.displayName === post.username && <button className='delete-post' onClick={() => handleDeletePost(id)}>Delete</button>}\r\n            </div>\r\n            <div className=\"post-image\">\r\n                <img src={post.photoUrl} alt={post.username} />\r\n            </div>\r\n            \r\n            <div className=\"post-caption\">\r\n                <span>{post.username}</span>\r\n                <p>{post.post}</p>\r\n            </div>\r\n            { post.comments && post.comments.map(comment => (\r\n                <div className=\"post-comments\">\r\n                <p className=\"username-comment\">{comment.username}</p>\r\n                <p className=\"comment\">{comment.comment}</p>\r\n                </div>\r\n            ))}\r\n            {user && <Comment comment={comment} setComment={setComment} handleAddComment={handleAddComment} id={id} />}\r\n            </div>\r\n        ) ) }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n"]},"metadata":{},"sourceType":"module"}