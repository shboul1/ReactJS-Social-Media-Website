{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\i5-10400f\\\\Desktop\\\\react-test\\\\src\\\\components\\\\CreatePost\\\\CreatePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { UserContext } from \"../Context/userContext\";\nimport { db, storage, storageRef } from \"../firebase/firebase\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport \"./CreatePost.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreatePost = () => {\n  _s();\n\n  const [user, setUser] = useContext(UserContext).user;\n  const [post, setPost] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [progress, setProgress] = useState(null);\n\n  const generateId = length => {\n    let allCarc = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\";\n    let myId = '';\n\n    for (var i = 0; i < length; i++) {\n      myId += allCarc[Math.floor(Math.random() * allCarc.length)];\n    }\n\n    return myId;\n  };\n\n  const handleUpload = () => {\n    if (image) {\n      var imgId = generateId(10);\n      const storageRef = ref(`images/${imgId}.jpg`);\n      const uploadTask = uploadBytesResumable(storageRef);\n      uploadTask.on(\"state changed\", snapshot => {\n        const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n        setProgress(progress);\n      }, error => {\n        console.log(error);\n      }, () => {\n        ref(\"images\").child(`${imgId}.jpg`).getDownloadURL().then(imageURL => {\n          db.collection(\"posts\").add({\n            post: post,\n            username: user.displayName,\n            photoUrl: imageURL,\n            profileURL: user.photoUrl\n          });\n        });\n      }); // // Create the file metadata\n      // /** @type {any} */\n      // const metadata = {\n      //     contentType: 'image/jpeg'\n      // };\n      // const storageRef = ref(storage, 'images/' );\n      // const uploadTask = uploadBytesResumable(storageRef);\n      // uploadTask.on('state_changed',\n      // (snapshot) => {\n      //     const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n      //     console.log('Upload is ' + progress + '% done');\n      // }, \n      // (error) => {\n      //     console.log(error)\n      // }, \n      // () => {\n      //     getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n      //     console.log('File available at', downloadURL) });\n      //     }\n      // );\n    }\n  };\n\n  const handleImage = e => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n      var urlObject = URL.createObjectURL(e.target.files[0]);\n      var myImageTag = document.getElementById('Image-Preview');\n      myImageTag.src = urlObject;\n      myImageTag.style.display = 'block';\n      myImageTag.style.width = '100px';\n      myImageTag.style.height = '100px';\n      myImageTag.style.padding = '10px';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-post\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Create a Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Enter a post...\",\n      value: post,\n      onChange: e => setPost(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"img\",\n        id: \"Image-Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"addImage\",\n        style: {\n          cursor: \"pointer\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fas fa-camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 66\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"addImage\",\n        accept: \"image/*\",\n        style: {\n          display: \"none\"\n        },\n        onChange: handleImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        style: {\n          color: post || image ? 'black' : '#999'\n        },\n        disabled: !post,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreatePost, \"/6J0l/HSom3IX+7dVApB6QgD4VQ=\");\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["C:/Users/i5-10400f/Desktop/react-test/src/components/CreatePost/CreatePost.js"],"names":["React","useContext","useState","UserContext","db","storage","storageRef","ref","uploadBytesResumable","getDownloadURL","CreatePost","user","setUser","post","setPost","image","setImage","progress","setProgress","generateId","length","allCarc","myId","i","Math","floor","random","handleUpload","imgId","uploadTask","on","snapshot","round","bytesTransferred","totalBytes","error","console","log","child","then","imageURL","collection","add","username","displayName","photoUrl","profileURL","handleImage","e","target","files","urlObject","URL","createObjectURL","myImageTag","document","getElementById","src","style","display","width","height","padding","value","cursor","color"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { UserContext } from \"../Context/userContext\";\r\nimport { db, storage, storageRef } from \"../firebase/firebase\";\r\nimport {ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\r\n\r\nimport \"./CreatePost.css\"\r\nconst CreatePost = () => {\r\n\r\n\r\n  const [user, setUser] = useContext(UserContext).user;\r\n  const [post, setPost] = useState(\"\");\r\n  const [image, setImage] = useState(null);\r\n  const [progress, setProgress] = useState(null);\r\n\r\n\r\n  const generateId = (length) => {\r\n    let allCarc = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\";\r\n    let myId = '';\r\n    for (var i = 0; i < length ; i++){\r\n        myId += allCarc[Math.floor(Math.random() * allCarc.length)] \r\n    }\r\n    return myId\r\n  }\r\n\r\n\r\n  const handleUpload = () => {\r\n\r\n      if(image) {\r\n                      var imgId = generateId(10);\r\n                      const storageRef = ref(`images/${imgId}.jpg`);\r\n                      const uploadTask = uploadBytesResumable(storageRef);\r\n                      uploadTask.on(\"state changed\",(snapshot) => {\r\n                        const progress = Math.round( (snapshot.bytesTransferred / snapshot.totalBytes) * 100);\r\n                        setProgress(progress);\r\n                      },(error) => {\r\n                          console.log(error)\r\n                      },() => {\r\n                        ref(\"images\").child(`${imgId}.jpg`).getDownloadURL()\r\n                          .then((imageURL) => {\r\n                              db.collection(\"posts\").add({\r\n                                  post: post,\r\n                                  username: user.displayName,\r\n                                  photoUrl: imageURL,\r\n                                  profileURL: user.photoUrl\r\n                              })\r\n                          })\r\n                      })\r\n                    // // Create the file metadata\r\n                    // /** @type {any} */\r\n                    // const metadata = {\r\n                    //     contentType: 'image/jpeg'\r\n                    // };\r\n\r\n                    // const storageRef = ref(storage, 'images/' );\r\n                    // const uploadTask = uploadBytesResumable(storageRef);\r\n\r\n                    // uploadTask.on('state_changed',\r\n                    // (snapshot) => {\r\n                    //     const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                    //     console.log('Upload is ' + progress + '% done');\r\n                    // }, \r\n                    // (error) => {\r\n                    //     console.log(error)\r\n                    // }, \r\n                    // () => {\r\n                    //     getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n                    //     console.log('File available at', downloadURL) });\r\n                    //     }\r\n                    // );\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const handleImage = (e) => {\r\n    if(e.target.files[0]){\r\n\r\n      setImage(e.target.files[0])\r\n\r\n      var urlObject = URL.createObjectURL(e.target.files[0])\r\n\r\n      var myImageTag = document.getElementById('Image-Preview')\r\n      myImageTag.src = urlObject\r\n      myImageTag.style.display = 'block'\r\n      myImageTag.style.width = '100px'\r\n      myImageTag.style.height = '100px'\r\n      myImageTag.style.padding = '10px'\r\n    }\r\n  }\r\n\r\n\r\n    return (\r\n        <div className=\"create-post\">\r\n            <p>Create a Post</p>\r\n            <textarea\r\n            placeholder='Enter a post...'\r\n            value={post}\r\n            onChange={e => setPost(e.target.value)}>\r\n            </textarea>\r\n            <div className=\"image\">\r\n              <img alt=\"img\" id='Image-Preview' />\r\n            </div>\r\n            <div className=\"actions\">\r\n            <label htmlFor=\"addImage\" style={{cursor:\"pointer\"}}><i class=\"fas fa-camera\"></i></label>\r\n            <input type=\"file\" id='addImage' accept='image/*' style={{display: \"none\"}} onChange={handleImage}/>\r\n            <button onClick={handleUpload} style={{color: post || image ? 'black' : '#999'}} disabled={!post}>Upload</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost\r\n"]},"metadata":{},"sourceType":"module"}